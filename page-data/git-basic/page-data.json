{"componentChunkName":"component---src-templates-post-jsx","path":"/git-basic/","result":{"data":{"site":{"siteMetadata":{"title":"bbahna"}},"markdownRemark":{"id":"3062df4e-de3c-52f6-91db-901f1f9c6d5e","excerpt":"Clone(클론) 원격 저장소를 로컬 저장소에 복제\n Branch(브랜치) 동시에 다양한 작업을 할 수 있도록 분리된 작업영역 브랜치 생성\n 브랜치 삭제\n Checkout(체크아웃) 브랜치 전환\n 브랜치 생성과 전환\n 브랜치 조회\n Commit(커밋) 커밋 추가\n\n 커밋 상태\n 커밋 메시지\n Push(푸시) 원격 저장소의 데이터를 로컬 저장소에 가져와 병…","html":"<h2>Clone(클론)</h2>\n<ul>\n<li>원격 저장소를 로컬 저장소에 복제<br/>\n<code class=\"language-text\">$ git clone https://github.com/{GithubID}/{RepositoryName}.git</code></li>\n</ul>\n<h2>Branch(브랜치)</h2>\n<p>동시에 다양한 작업을 할 수 있도록 분리된 작업영역</p>\n<ul>\n<li>브랜치 생성<br/>\n<code class=\"language-text\">$ git branch {브랜치 이름}</code></li>\n<li>브랜치 삭제<br/>\n<code class=\"language-text\">$ git branch -D {브랜치 이름}</code></li>\n</ul>\n<h2>Checkout(체크아웃)</h2>\n<ul>\n<li>브랜치 전환<br/>\n<code class=\"language-text\">$ git checkout {브랜치 이름}</code></li>\n<li>브랜치 생성과 전환<br/>\n<code class=\"language-text\">$ git branch -b {브랜치 이름}</code></li>\n<li>브랜치 조회<br/>\n<code class=\"language-text\">$ git branch</code></li>\n</ul>\n<h2>Commit(커밋)</h2>\n<ul>\n<li>커밋 추가<br/>\n<code class=\"language-text\">$ git add .</code><br/>\n<code class=\"language-text\">$ git add {파일명}</code></li>\n<li>커밋 상태<br/>\n<code class=\"language-text\">$ git status</code></li>\n<li>커밋 메시지<br/>\n<code class=\"language-text\">$ git commit -m \"커밋 메시지\"</code></li>\n</ul>\n<h2>Push(푸시)</h2>\n<ul>\n<li>원격 저장소의 데이터를 로컬 저장소에 가져와 병합하기<br/>\n<code class=\"language-text\">$ git push {origin master}</code></li>\n</ul>\n<h2>Fetch(패치)</h2>\n<ul>\n<li>원격 저장소의 데이터를 로컬에 가져오기만 하기<br/>\n<code class=\"language-text\">$ git fetch {origin master}</code></li>\n</ul>\n<h2>Pull(풀)</h2>\n<ul>\n<li>로컬 저장소의 데이터를 원격 저장소로 밀어넣기<br/>\n<code class=\"language-text\">$ git pull {origin master}</code></li>\n</ul>\n<h2>Merge(머지)</h2>\n<ul>\n<li>변경 이력 병합하기<br/>\n<code class=\"language-text\">$ git merge {branch_name}</code></li>\n</ul>\n<h2>Tag(태그)</h2>\n<ul>\n<li>커밋을 참조하기 쉽도록 알기 쉬운 이름을 붙이는 것<br/>\n<code class=\"language-text\">$ git tag {태그 이름}</code></li>\n<li>태그명으로 커밋 조회<br/>\n<code class=\"language-text\">$ git show {태그 이름}</code></li>\n</ul>","frontmatter":{"title":"[Git] 기본 명령어들","date":"May 20, 2022","update":"May 20, 2022","tags":["git","commit","push","pull","TIL"],"series":"Git"},"fields":{"slug":"/git-basic/","readingTime":{"minutes":1.665}}},"seriesList":{"edges":[{"node":{"id":"3062df4e-de3c-52f6-91db-901f1f9c6d5e","fields":{"slug":"/git-basic/"},"frontmatter":{"title":"[Git] 기본 명령어들"}}},{"node":{"id":"fc7e1800-4fa0-5a6d-8e3c-eb3de24b44af","fields":{"slug":"/git-history/"},"frontmatter":{"title":"[Git] commit history 초기화"}}},{"node":{"id":"81cbc06c-9f3f-5727-b0b0-6c8daf248493","fields":{"slug":"/git-ssh/"},"frontmatter":{"title":"[Git] 한 컴퓨터에서 여러계정 사용하기"}}}]},"previous":{"fields":{"slug":"/application-rendering/"},"frontmatter":{"title":"CSR, SSR / SPA, MPA에 대한 이해"}},"next":{"fields":{"slug":"/why-nodejs/"},"frontmatter":{"title":"JavaScript 런타임 환경 Node.js"}}},"pageContext":{"id":"3062df4e-de3c-52f6-91db-901f1f9c6d5e","series":"Git","previousPostId":"6aaa3ee5-3ed4-58b6-808b-0ffe82d761d6","nextPostId":"c9e4e313-7249-501f-a78f-4b020a120bc1"}},"staticQueryHashes":[]}