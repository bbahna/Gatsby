{"componentChunkName":"component---src-templates-post-jsx","path":"/http-network/","result":{"data":{"site":{"siteMetadata":{"title":"bbahna"}},"markdownRemark":{"id":"ecd8a680-c7ea-55de-969b-bf29bb84105a","excerpt":"왜 등장했을까? HTTP 통신은 요청(Request) → 응답(Response)이 종료되면 연결을 끊어버림 Connectionless(비연결성): 클라이언트가 서버에 요청을 했을 때, 요청에 맞는 응답을 보낸 후 연결을 끊는 처리방식 Stateless(무상태성): 클라이언트의 상태 정보를 가지지 않는 서버 처리방식(클라이언트와 첫 번째 통신에 데이터를 주…","html":"<h2>왜 등장했을까?</h2>\n<ul>\n<li>\n<p><strong>HTTP 통신</strong>은 요청(Request) → 응답(Response)이 종료되면 연결을 끊어버림</p>\n<ol>\n<li><strong>Connectionless</strong>(비연결성<strong>)</strong>: 클라이언트가 서버에 요청을 했을 때, 요청에 맞는 응답을 보낸 후 연결을 끊는 처리방식</li>\n<li><strong>Stateless</strong>(무상태성<strong>)</strong>: 클라이언트의 상태 정보를 가지지 않는 서버 처리방식<br/>(클라이언트와 첫 번째 통신에 데이터를 주고 받았다 해도, 두 번째 통신에 이전 데이터를 유지하지 않음)</li>\n</ol>\n</li>\n<li>이를 보완하기 위해 쿠키, 세션, 토큰의 인증 방식을 사용</li>\n</ul>\n<h2>쿠키(Cookie)</h2>\n<ul>\n<li>공개 가능한 정보를 사용자의 브라우저에 저장</li>\n<li>보안에 취약함(개인정보를 HTTP로 주고 받는 것은 위험)</li>\n</ul>\n<h3>캐시(Cache)</h3>\n<ul>\n<li>자주 사용하는 데이터를 미리 복사해두는 임의의 장소</li>\n<li>데이터나 값을 미리 복사해 놓음으로써 빠르게 데이터에 접근 가능</li>\n</ul>\n<h2>세션(Session)</h2>\n<ul>\n<li>클라이언트에 대해 유일한 값(세션 id)를 부여, 세션 스토리지에 세션 정보를 저장</li>\n<li>인증정보를 서버에 저장(사용자가 많다면 서버에 부하)</li>\n</ul>\n<h2>토큰(Token)</h2>\n<h3><a href=\"https://jwt.io\">JWT</a>(JSON Web Token)</h3>\n<ul>\n<li>인증에 필요한 정보들을 암호화시킨 토큰</li>\n<li>쿠키/세션 방식과 유사하게 JWT(Access Token)를 HTTP 헤더에 실어 서버가 클라이언트를 식별</li>\n</ul>\n<h3>구조: Header.payload.signature(. 으로 구분)</h3>\n<ul>\n<li><strong>Header</strong>: JWT를 어떻게 검증(verify)하는가에 대한 내용</li>\n<li><strong>payload</strong>: JWT의 내용(client id 및 유효기간 등)</li>\n<li><strong>signature</strong>: 암호화된 Header와 Payload를 더한 뒤 비밀키로 해싱하여 생성</li>\n</ul>\n<h3>장점</h3>\n<ul>\n<li>header와 payload로 signaure를 생성하므로 데이터 위변조를 막을 수 있음</li>\n<li>별도의 저장소가 필요없음(서버 부하 ↓)</li>\n<li>토큰은 한 번 발급되면 유효기간이 만료 시까지 계속 사용 가능</li>\n</ul>\n<h3>단점</h3>\n<ul>\n<li>토큰의 길이가 길어 인증 요청이 많아질수록, 네트워크 부하가 심해짐</li>\n<li>payload 자제는 암호화되지 않기에 중요한 정보를 담으면 안됨</li>\n<li>토큰이 유출되면 대처하기 어려움</li>\n<li>특정 사용자의 접속을 강제로 만료하기 어려움</li>\n</ul>\n<h3>해결방안</h3>\n<ul>\n<li><strong>짧은 만료기한 설정</strong>: 만료기한을 짧게 설정해서 유출될 위험을 줄임</li>\n<li><strong>Refresh Token</strong>: 클라이언트가 로그인할 때 Access Token 및 Refresh Token을 발급</li>\n<li><strong>Sliding Session</strong>: 클라이언트에게 자동으로 토큰 만료 기한을 늘려줌</li>\n</ul>","frontmatter":{"title":"인증방식: 쿠키, 세션, 토큰(JWT)","date":"September 10, 2022","update":"September 10, 2022","tags":["http","network","cookie","cache","session","token","JWT","TIL"],"series":"WEB"},"fields":{"slug":"/http-network/","readingTime":{"minutes":3.31}}},"seriesList":{"edges":[{"node":{"id":"b7711bb5-3432-5a55-a4aa-4ea4a334f026","fields":{"slug":"/web-http/"},"frontmatter":{"title":"웹 브라우저 동작원리, http란?"}}},{"node":{"id":"a2d11312-2f76-5e64-9f04-15cf339e35e1","fields":{"slug":"/html-dom/"},"frontmatter":{"title":"HTML, DOM 차이"}}},{"node":{"id":"6aaa3ee5-3ed4-58b6-808b-0ffe82d761d6","fields":{"slug":"/application-rendering/"},"frontmatter":{"title":"CSR, SSR / SPA, MPA에 대한 이해"}}},{"node":{"id":"ecd8a680-c7ea-55de-969b-bf29bb84105a","fields":{"slug":"/http-network/"},"frontmatter":{"title":"인증방식: 쿠키, 세션, 토큰(JWT)"}}}]},"previous":{"fields":{"slug":"/git-ssh/"},"frontmatter":{"title":"[Git] 한 컴퓨터에서 여러계정 사용하기"}},"next":null},"pageContext":{"id":"ecd8a680-c7ea-55de-969b-bf29bb84105a","series":"WEB","previousPostId":"81cbc06c-9f3f-5727-b0b0-6c8daf248493","nextPostId":null}},"staticQueryHashes":[]}