{"componentChunkName":"component---src-templates-series-jsx","path":"/series/React","result":{"data":{"posts":{"nodes":[{"excerpt":"React 특징 JavaScript Frontend Framework(Library) 사용자 인터페이스를 구축하기 위한 선언적이고 효율적이며 유연한 JavaScript 라이브러리\n“컴포넌트”라고 불리는 작고 고립된 코드의 파편을 이용하여 복잡한 UI를 구성하도록 돕습니다. SPA(Single Page Application) Component 기반 Virt…","fields":{"slug":"/why-react/"},"frontmatter":{"date":"June 20, 2022","update":"Jun 20, 2022","title":"React.js는 왜 쓸까?","tags":["React","component","TIL"]}},{"excerpt":"React hooks란?  함수형 컴포넌트에서 기능을 추가할 때 사용하는 함수들 1. useEffect 컴포넌트가 마운트 됐을 때(처음 나타났을 때), 언마운트 됐을 때(사라질 때), 그리고 업데이트 될 때(특정 props가 바뀔 때) 실행되는 hook API 호출, 이벤트 처리 등을 처리할 때 사용 2. useMemo 이전에 계산 한 값(랜더링한 함수 …","fields":{"slug":"/react-hooks/"},"frontmatter":{"date":"June 30, 2022","update":"Jun 30, 2022","title":"React hooks에 대해 알아보자","tags":["React","hooks","useEffect","useMemo","useCallback","useRef","useReducer","useState","useContext","portals"]}}]}},"pageContext":{"series":"React"}},"staticQueryHashes":[]}